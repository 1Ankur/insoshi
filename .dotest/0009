From 19eed13d1049ba2b262ffe8b003e1b334dcc6a98 Mon Sep 17 00:00:00 2001
From: Piotr Jakubowski <piotrj@piotr-jakubowskis-macbook.local>
Date: Sat, 14 Jun 2008 20:20:52 +0200
Subject: Thumbnails moved to a seperate class

---
 app/controllers/photos_controller.rb       |    4 ++--
 app/models/photo.rb                        |    5 ++++-
 app/models/thumbnail.rb                    |    8 ++++++++
 db/migrate/029_create_thumbnails.rb        |   18 ++++++++++++++++++
 spec/controllers/photos_controller_spec.rb |   24 +++++++-----------------
 spec/fixtures/thumbnails.yml               |    7 +++++++
 spec/models/photo_spec.rb                  |   16 +++++++++-------
 spec/models/thumbnail_spec.rb              |   13 +++++++++++++
 8 files changed, 68 insertions(+), 27 deletions(-)
 create mode 100644 app/models/thumbnail.rb
 create mode 100644 db/migrate/029_create_thumbnails.rb
 create mode 100644 spec/fixtures/thumbnails.yml
 create mode 100644 spec/models/thumbnail_spec.rb

diff --git a/app/controllers/photos_controller.rb b/app/controllers/photos_controller.rb
index 6a14dcc4be4620113d00aa567ea4a655cbe676e0..fee3cb366f1e1d41128ffd4a630b1f0e6c2709bc 100644
--- a/app/controllers/photos_controller.rb
+++ b/app/controllers/photos_controller.rb
@@ -36,10 +36,10 @@ class PhotosController < ApplicationController
     if params[:photo].nil?
       # This is mainly to prevent exceptions on iPhones.
       flash[:error] = "Your browser doesn't appear to support file uploading"
-      redirect_to edit_person_url(current_person) and return
+      redirect_to gallery_path(Gallery.find(params[:gallery_id])) and return
     end
     if params[:commit] == "Cancel"
-      redirect_to edit_person_url(current_person) and return
+      redirect_to gallery_path(Gallery.find(params[:gallery_id])) and return
     end
     
     @gallery = Gallery.find(params[:gallery_id])
diff --git a/app/models/photo.rb b/app/models/photo.rb
index 328ea7fd3b41eee8295a2bf92381f8a46347bcac..a61c7ed2eb24365a1261143057daca2d4baee728 100644
--- a/app/models/photo.rb
+++ b/app/models/photo.rb
@@ -33,11 +33,14 @@ class Photo < ActiveRecord::Base
                  :resize_to => '240>',
                  :thumbnails => { :thumbnail    => '72>',
                                   :icon         => '36>',
-                                  :bounded_icon => '36x36>' }
+                                  :bounded_icon => '36x36>' },
+                 :thumbnail_class => Thumbnail
   
   has_many :activities, :foreign_key => "item_id", :dependent => :destroy
     
   validates_length_of :title, :maximum => 255, :allow_nil => true
+  validates_presence_of :person_id
+  validates_presence_of :gallery_id
   after_create :log_activity
   
   def self.per_page
diff --git a/app/models/thumbnail.rb b/app/models/thumbnail.rb
new file mode 100644
index 0000000000000000000000000000000000000000..fb6f9a8eae32d3434be21f5f90a1bcf3ea57d536
--- /dev/null
+++ b/app/models/thumbnail.rb
@@ -0,0 +1,8 @@
+class Thumbnail < ActiveRecord::Base
+  belongs_to :photo, :foreign_key => 'parent_id'
+
+  has_attachment  :storage => :file_system,
+                  :content_type => :image
+                  
+  validates_presence_of :parent_id
+end
diff --git a/db/migrate/029_create_thumbnails.rb b/db/migrate/029_create_thumbnails.rb
new file mode 100644
index 0000000000000000000000000000000000000000..323d564f4ebe111b07f258a07fe7493be7655574
--- /dev/null
+++ b/db/migrate/029_create_thumbnails.rb
@@ -0,0 +1,18 @@
+class CreateThumbnails < ActiveRecord::Migration
+  def self.up
+    create_table :thumbnails do |t|
+      t.integer :parent_id
+      t.string :content_type
+      t.string :filename
+      t.string :thumbnail
+      t.integer :size
+      t.integer :width
+      t.integer :height
+      t.timestamps
+    end
+  end
+
+  def self.down
+    drop_table :thumbnails
+  end
+end
diff --git a/spec/controllers/photos_controller_spec.rb b/spec/controllers/photos_controller_spec.rb
index 06a17b2a6d97d62d3c44a3734db14a660eafa63d..1105c06202244ab24c4de10b08a5b823f110e100 100644
--- a/spec/controllers/photos_controller_spec.rb
+++ b/spec/controllers/photos_controller_spec.rb
@@ -45,39 +45,29 @@ describe PhotosController do
     it "should create photo" do
       image = uploaded_file("rails.png")
       lambda do
-        post :create, :photo => { :uploaded_data => image, :gallery_id => @gallery }
-      end.should change(@gallery, :photos_count).by(1)
+        post :create, :photo => { :uploaded_data => image}, :gallery_id => @gallery
+      end.should change(Photo, :count).by(1)
     end
     
     it "should handle empty photo upload" do
       lambda do
-        post :create, :photo => { :uploaded_data => nil }
+        post :create, :photo => { :uploaded_data => nil }, :gallery_id => @gallery
         response.should render_template("new")
       end.should_not change(Photo, :count)
     end
     
     it "should handle cancellation and doesn't report about problem" do
-      post :create, :commit => "Cancel", :photo => { :uploaded_data => nil }
-      response.should redirect_to(edit_person_url(@person))
+      post :create, :commit => "Cancel", :photo => { :uploaded_data => nil }, :gallery_id => @gallery
+      response.should redirect_to(gallery_url(@gallery))
       flash[:error].should be_nil
     end
     
     it "should handle nil photo parameter" do
-      post :create, :photo => nil
-      response.should redirect_to(edit_person_url(@person))
+      post :create, :photo => nil, :gallery_id => @gallery
+      response.should redirect_to(gallery_url(@gallery))
       flash[:error].should_not be_nil
     end
     
-    it "should mark a photo as primary" do
-      # We check that the secondary photo is made primary, while the old
-      # primary photo is marked non-primary.
-      Photo.should_receive(:find).and_return(@secondary)
-      @secondary.should_receive(:update_attributes).with(:primary => true).
-        and_return(true)
-      @primary.should_receive(:update_attributes!).with(:primary => false)
-      put :update, :photo => @secondary
-    end
-    
     it "should destroy a photo" do
       Photo.should_receive(:find).and_return(@secondary)
       @secondary.should_receive(:destroy).and_return(true)
diff --git a/spec/fixtures/thumbnails.yml b/spec/fixtures/thumbnails.yml
new file mode 100644
index 0000000000000000000000000000000000000000..5bf02933a3a79bfacb88dad9d4f4799f3cf20600
--- /dev/null
+++ b/spec/fixtures/thumbnails.yml
@@ -0,0 +1,7 @@
+# Read about fixtures at http://ar.rubyonrails.org/classes/Fixtures.html
+
+# one:
+#   column: value
+#
+# two:
+#   column: value
diff --git a/spec/models/photo_spec.rb b/spec/models/photo_spec.rb
index ba1323f048ce63a76f95fdd79eb2159ca71ba1ac..ad57c27eba30ab18f64db66ce1d0d766a38f869a 100644
--- a/spec/models/photo_spec.rb
+++ b/spec/models/photo_spec.rb
@@ -13,13 +13,15 @@ describe Photo do
     new_photo.should be_valid
   end
   
-  # it "should be able to make a primary photo" do
-  #   new_photo(:primary => true).should be_primary
-  # end
-  # 
-  # it "should be able to make a non-primary photo" do
-  #   new_photo(:primary => false).should_not be_primary    
-  # end
+  it "should be invalid without person_id" do
+    @person = nil
+    new_photo.should_not be_valid
+  end
+  
+  it "should be invalid without gallery_id" do
+    @gallery = nil
+    new_photo.should_not be_valid
+  end
   
   
   it "should have an associated person" do
diff --git a/spec/models/thumbnail_spec.rb b/spec/models/thumbnail_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..152df25a7297276c874c3ef48775b96c3d832451
--- /dev/null
+++ b/spec/models/thumbnail_spec.rb
@@ -0,0 +1,13 @@
+require File.dirname(__FILE__) + '/../spec_helper'
+
+describe Thumbnail do
+  it "should be valid" do
+    @thumbnail = Thumbnail.new({:parent_id => 1})
+    @thumbnail.should be_valid
+  end
+  
+  it "should be invalid without parent_id" do
+    @thumbnail = Thumbnail.new
+    @thumbnail.should_not be_valid
+  end
+end
-- 
1.5.3.7


