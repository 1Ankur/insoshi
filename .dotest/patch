---
 app/helpers/activities_helper.rb      |   17 +++++++++++++++
 app/models/gallery.rb                 |   21 ++++++++++++++----
 app/views/galleries/_gallery.html.erb |   14 ++++++------
 app/views/galleries/index.html.erb    |    5 +---
 app/views/people/show.html.erb        |    1 +
 db/migrate/025_create_galleries.rb    |    2 +-
 spec/fixtures/galleries.yml           |   19 +++++++++++++++++
 spec/models/gallery_spec.rb           |   37 +++++++++++++++++++++++++++++++++
 8 files changed, 99 insertions(+), 17 deletions(-)
 create mode 100644 spec/fixtures/galleries.yml
 create mode 100644 spec/models/gallery_spec.rb

diff --git a/app/helpers/activities_helper.rb b/app/helpers/activities_helper.rb
index 2063921a866c44bd802fb60787d755407af63f95..cee64bda0b142e66a97ea61e9ef332c93ddc0034 100644
--- a/app/helpers/activities_helper.rb
+++ b/app/helpers/activities_helper.rb
@@ -39,6 +39,10 @@ module ActivitiesHelper
       %(#{person_link(person)} changed their profile picture.)
     when "Person"
       %(#{person_link(person)} changed their description.)
+    when "Gallery"
+      gallery_link = 
+      %(#{person_link(person)} added new gallery #{gallery_link(activity.item)}.)
+      
     else
       # TODO: make this a more graceful falure (?).
       raise "Invalid activity type #{activity_type(activity).inspect}"
@@ -84,6 +88,9 @@ module ActivitiesHelper
       %(#{person_link(person)} changed their profile picture.)
     when "Person"
       %(#{person_link(person)} changed their description.)
+    when "Gallery"
+      %(#{person_link(person)} added new gallery #{gallery_link(activity.item)}.)
+      
     else
       raise "Invalid activity type #{activity_type(activity).inspect}"
     end
@@ -112,6 +119,8 @@ module ActivitiesHelper
               "camera.gif"
             when "Person"
                 "edit.gif"
+            when "Gallery"
+              "camera.gif"
             else
               # TODO: make this a more graceful falure (?).
               raise "Invalid activity type #{activity_type(activity).inspect}"
@@ -148,6 +157,14 @@ module ActivitiesHelper
     end
     link_to(text, forum_topic_path(topic.forum, topic))
   end
+  
+  def gallery_link(text, gallery = nil)
+    if gallery.nil?
+      gallery = text
+      text = gallery.title
+    end
+    link_to(h(text), gallery_path(gallery))
+  end
 
   # Return a link to the wall.
   def wall(activity)
diff --git a/app/models/gallery.rb b/app/models/gallery.rb
index 658082234a04e75ed37103c6f56961d63ef4e911..dc6c00ffaedfb5372adcab61aeaa6e5e539f60a3 100644
--- a/app/models/gallery.rb
+++ b/app/models/gallery.rb
@@ -1,15 +1,21 @@
 class Gallery < ActiveRecord::Base
+  include ActivityLogger
   belongs_to :person
   has_many :photos, :dependent => :destroy
+  has_many :activities, :foreign_key => "item_id", :dependent => :destroy
+  
+
+  validates_length_of :title, :maximum => 255, :allow_nil => true
+  validates_length_of :description, :maximum => 1000, :allow_nil => true
+  validates_presence_of :person_id
+  
+  after_create :log_activity
+
   
   def self.per_page
     5
   end
   
-  # def primary_photo
-  #   self.photos.find_all_by_primary(true).first
-  # end
-  
 
   def primary_photo
     if !self.primary_photo_id.nil?
@@ -19,7 +25,7 @@ class Gallery < ActiveRecord::Base
     end
   end
   
-  def primary_photo= (photo)
+  def primary_photo=(photo)
     self.primary_photo_id = photo.id
   end
   
@@ -39,4 +45,9 @@ class Gallery < ActiveRecord::Base
     primary_photo.nil? ? "default_icon.png" : primary_photo.public_filename(:bounded_icon)
   end
   
+  def log_activity
+    activity = Activity.create!(:item => self, :person => self.person)
+    add_activities(:activity => activity, :person => self.person)
+  end
+  
 end
diff --git a/app/views/galleries/_gallery.html.erb b/app/views/galleries/_gallery.html.erb
index 001ca4b298f42312a1ae52b93a095bb5fab116f6..599d4211461a6ecbdcc3481b8f6ecc93f0f35e4a 100644
--- a/app/views/galleries/_gallery.html.erb
+++ b/app/views/galleries/_gallery.html.erb
@@ -1,13 +1,13 @@
 <div class="gallery_list_item">
-	<%=image_tag(gallery.thumbnail_url)%>
+	<%=link_to image_tag(gallery.thumbnail_url), gallery_path(gallery)%>
 	<div class="description">
 	<p>	
-		<%=h gallery.title%> by <%=h gallery.person.name%>
-		<div class="tools">
-		<% if current_person?(gallery.person)%>
-			<%= link_to "Edit", edit_gallery_path(gallery) %> | <%= link_to "Delete", gallery_path(gallery), :method => :delete, :confirm => "Do you really want to delete #{h gallery.title} gallery"%> <br/>
-		<%-end-%>
-		</div>
+		<%= link_to h(gallery.title), gallery_path(gallery)%>
 	</p>
+	<div class="tools">
+	<% if current_person?(gallery.person)%>
+		<%= link_to "Edit", edit_gallery_path(gallery) %> | <%= link_to "Delete", gallery_path(gallery), :method => :delete, :confirm => "Do you really want to delete #{h gallery.title} gallery"%> <br/>
+	<%-end-%>
+	</div>
 </div>
 </div>
\ No newline at end of file
diff --git a/app/views/galleries/index.html.erb b/app/views/galleries/index.html.erb
index 28f06a6e0c75f43d4c0a0735b045805b48e5e880..94d3da11079616f3fc5f04377b7f30ae8806be8d 100644
--- a/app/views/galleries/index.html.erb
+++ b/app/views/galleries/index.html.erb
@@ -1,12 +1,9 @@
 <%- column_div :type => :primary do -%>
 	<h2> Galleries </h2>
 	<div id="gallery_list">
-		<ul>
-
 			<% @galleries.each do |gallery| %>
-			<li>	<%=link_to (render :partial=>"gallery", :object=>gallery), gallery_path(gallery)%>
+				<%=render :partial=>"gallery", :object=>gallery%>
 			<%- end -%>
-		</ul>
 	</div >	
 	<%= will_paginate(@galleries) %>
 
diff --git a/app/views/people/show.html.erb b/app/views/people/show.html.erb
index fffb81fade0df4bc88b65f2447f551bdc62ca39d..a0ee49ee44f7d976d2664fc3a3c1635fbfb590a5 100644
--- a/app/views/people/show.html.erb
+++ b/app/views/people/show.html.erb
@@ -47,6 +47,7 @@
         <%- end -%>
           <li><%= link_to "#{h @person.name}'s blog",
                   blog_path(@person.blog) %></li>
+					<li><%= link_to "#{h @person.name}'s galleries", person_galleries_path(@person)%>
           <%- if current_person.admin? -%>
           <li>
           <%- activity = @person.deactivated? ? "activate" : "deactivate" -%>
diff --git a/db/migrate/025_create_galleries.rb b/db/migrate/025_create_galleries.rb
index 93342bb4aa57c3e27741d1a5b39ad0e28dc695b1..6136adc9f32f8d066415b51153bd6948ed0c69b8 100644
--- a/db/migrate/025_create_galleries.rb
+++ b/db/migrate/025_create_galleries.rb
@@ -4,7 +4,7 @@ class CreateGalleries < ActiveRecord::Migration
       t.integer :person_id
       t.string :title
       t.string :description
-      t.integer :photos_count
+      t.integer :photos_count, :null => false, :default => 0
       t.integer :primary_photo_id
       t.timestamps
     end
diff --git a/spec/fixtures/galleries.yml b/spec/fixtures/galleries.yml
new file mode 100644
index 0000000000000000000000000000000000000000..cf4bed8926fdf9a674182f8eedf8b65e2ff378d5
--- /dev/null
+++ b/spec/fixtures/galleries.yml
@@ -0,0 +1,19 @@
+# Read about fixtures at http://ar.rubyonrails.org/classes/Fixtures.html
+
+# one:
+#   column: value
+#
+# two:
+#   column: value
+
+valid_gallery:
+    person_id: 1
+    title: "Title"
+    description: "Some description"
+    primary_photo_id: NULL
+
+invalid_gallery:
+    person_id: NULL
+    title: "Title"
+    description: "Some description"
+    primary_photo_id: NULL
\ No newline at end of file
diff --git a/spec/models/gallery_spec.rb b/spec/models/gallery_spec.rb
new file mode 100644
index 0000000000000000000000000000000000000000..ed748ac6473fea78659beb7ff4fd5d70a0807b55
--- /dev/null
+++ b/spec/models/gallery_spec.rb
@@ -0,0 +1,37 @@
+require File.dirname(__FILE__) + '/../spec_helper'
+
+describe Gallery do
+  before(:each) do
+    @gallery = galleries(:valid_gallery)
+  end
+
+  it "should be valid" do
+    @gallery.should be_valid
+  end
+  
+  it "should require person_id" do
+    @gallery = galleries(:invalid_gallery)
+    @gallery.should_not be_valid
+    @gallery.errors.on(:person_id).should_not be_empty
+  end
+    
+  it "should have a max title length" do
+    @gallery.should have_maximum(:title, 255)
+  end
+  
+  it "should have a max description length" do
+    @gallery.should have_maximum(:description, 1000)
+  end
+  
+  it "should have many photos" do
+    @gallery.photos.should be_kind_of(Array)
+  end
+  
+  it "should have an activity" do
+    @gallery = Gallery.new(:person_id => people(:kelly).id)
+    @gallery.save!
+    Activity.find_by_item_id(@gallery).should_not be_nil
+  end
+  
+
+end
-- 
1.5.3.7


